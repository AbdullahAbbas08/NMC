// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Moia.DAL.databaseContext;

#nullable disable

namespace Moia.DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240327145255_addnamearintorole")]
    partial class addnamearintorole
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IsslamRecognitionMuslime", b =>
                {
                    b.Property<int>("IsslamRecognitionID")
                        .HasColumnType("int");

                    b.Property<int>("muslimesID")
                        .HasColumnType("int");

                    b.HasKey("IsslamRecognitionID", "muslimesID");

                    b.HasIndex("muslimesID");

                    b.ToTable("IsslamRecognitionMuslime");
                });

            modelBuilder.Entity("Moia.Shared.Models.Attachment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<byte[]>("AttachmentValue")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ImageType")
                        .HasColumnType("int");

                    b.Property<int?>("MuslimeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MuslimeID");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("Moia.Shared.Models.BranchNegoiationUsers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BranchId");

                    b.HasIndex("UserId");

                    b.ToTable("BranchNegoiationUsers");
                });

            modelBuilder.Entity("Moia.Shared.Models.Committee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Committees");
                });

            modelBuilder.Entity("Moia.Shared.Models.ContactData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ContactData");
                });

            modelBuilder.Entity("Moia.Shared.Models.Country", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Moia.Shared.Models.CurrentResidence", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoorNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CurrentResidence");
                });

            modelBuilder.Entity("Moia.Shared.Models.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BranshID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BranshID")
                        .IsUnique();

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Moia.Shared.Models.DepartmentNegoiationUsers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BranchId");

                    b.HasIndex("UserId");

                    b.ToTable("DepartmentNegoiationUsers");
                });

            modelBuilder.Entity("Moia.Shared.Models.Exceptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stacktrace")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exceptions");
                });

            modelBuilder.Entity("Moia.Shared.Models.FamilyInformation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("BoysNumber")
                        .HasColumnType("int");

                    b.Property<int?>("GirlsNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MembersNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("FamilyInformation");
                });

            modelBuilder.Entity("Moia.Shared.Models.IsslamRecognition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("IsslamRecognition");
                });

            modelBuilder.Entity("Moia.Shared.Models.Localization", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ValueAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Localizations");
                });

            modelBuilder.Entity("Moia.Shared.Models.MainRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MainRoles");
                });

            modelBuilder.Entity("Moia.Shared.Models.MainUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<bool>("ActiveDirectoryUser")
                        .HasColumnType("bit");

                    b.Property<int?>("AttachmentID")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool>("Display")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OTPCreationTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PasswordChanged")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TryloginCount")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AttachmentID");

                    b.HasIndex("BranchId");

                    b.ToTable("MainUsers");
                });

            modelBuilder.Entity("Moia.Shared.Models.MainUserRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("BranshId")
                        .HasColumnType("int");

                    b.Property<int?>("CommitteeId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BranshId");

                    b.HasIndex("CommitteeId");

                    b.HasIndex("DepartmentId")
                        .IsUnique()
                        .HasFilter("[DepartmentId] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("MainUserRole");
                });

            modelBuilder.Entity("Moia.Shared.Models.MinistryBransh", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserRoleID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserRoleID");

                    b.ToTable("MinistryBranshs");
                });

            modelBuilder.Entity("Moia.Shared.Models.Muslime", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("ContactDataID")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentResidenceID")
                        .HasColumnType("int");

                    b.Property<int?>("FamilyInformationID")
                        .HasColumnType("int");

                    b.Property<int?>("OriginalCountryID")
                        .HasColumnType("int");

                    b.Property<int?>("PersonalDataID")
                        .HasColumnType("int");

                    b.Property<int?>("PersonalInformationID")
                        .HasColumnType("int");

                    b.Property<int?>("WorkID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ContactDataID");

                    b.HasIndex("CurrentResidenceID");

                    b.HasIndex("FamilyInformationID");

                    b.HasIndex("OriginalCountryID");

                    b.HasIndex("PersonalDataID");

                    b.HasIndex("PersonalInformationID");

                    b.HasIndex("WorkID");

                    b.ToTable("Muslimes");
                });

            modelBuilder.Entity("Moia.Shared.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CommitteeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DataEntryID")
                        .HasColumnType("int");

                    b.Property<int?>("MuslimeID")
                        .HasColumnType("int");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CommitteeID");

                    b.HasIndex("DataEntryID");

                    b.HasIndex("MuslimeID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Moia.Shared.Models.OrderHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderHistory");
                });

            modelBuilder.Entity("Moia.Shared.Models.OriginalCountry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("DoorNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.ToTable("OriginalCountry");
                });

            modelBuilder.Entity("Moia.Shared.Models.PersonalData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("IslamDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAfter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAfterEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameBeforeFristAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameBeforeFristEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameBeforeLastAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameBeforeLastEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameBeforeMiddleAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameBeforeMiddleEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreacherNameID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PreacherNameID");

                    b.ToTable("PersonalData");
                });

            modelBuilder.Entity("Moia.Shared.Models.PersonalInformation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfEntryKingdom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfPassportIssue")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EducationalLevelID")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HusbandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<int?>("NationalityID")
                        .HasColumnType("int");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfPassportIssue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PositionInFamily")
                        .HasColumnType("int");

                    b.Property<int?>("PreviousReligionID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ResidenceIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ResidenceIssuePlaceID")
                        .HasColumnType("int");

                    b.Property<string>("ResidenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EducationalLevelID");

                    b.HasIndex("NationalityID");

                    b.HasIndex("PreviousReligionID");

                    b.HasIndex("ResidenceIssuePlaceID");

                    b.ToTable("PersonalInformation");
                });

            modelBuilder.Entity("Moia.Shared.Models.Preacher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Preachers");
                });

            modelBuilder.Entity("Moia.Shared.Models.Religion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Religions");
                });

            modelBuilder.Entity("Moia.Shared.Models.ResidenceIssuePlace", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ResidenceIssuePlace");
                });

            modelBuilder.Entity("Moia.Shared.Models.Settings", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Moia.Shared.Models.UserToken", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTimeOffset>("AccessTokenExpiresDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("AccessTokenHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ApplicationType")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("RefreshTokenExpiresDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RefreshTokenIdHash")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RefreshTokenIdHashSource")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("UserToken");
                });

            modelBuilder.Entity("Moia.Shared.Models.Witness", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Identity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Witness");
                });

            modelBuilder.Entity("Moia.Shared.Models.Work", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Work");
                });

            modelBuilder.Entity("Moia.Shared.ViewModels.DTOs.EducationalLevel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EducationalLevels");
                });

            modelBuilder.Entity("PersonalDataWitness", b =>
                {
                    b.Property<int>("PersonalDatasID")
                        .HasColumnType("int");

                    b.Property<int>("WitnessID")
                        .HasColumnType("int");

                    b.HasKey("PersonalDatasID", "WitnessID");

                    b.HasIndex("WitnessID");

                    b.ToTable("PersonalDataWitness");
                });

            modelBuilder.Entity("IsslamRecognitionMuslime", b =>
                {
                    b.HasOne("Moia.Shared.Models.IsslamRecognition", null)
                        .WithMany()
                        .HasForeignKey("IsslamRecognitionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Moia.Shared.Models.Muslime", null)
                        .WithMany()
                        .HasForeignKey("muslimesID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Moia.Shared.Models.Attachment", b =>
                {
                    b.HasOne("Moia.Shared.Models.Muslime", null)
                        .WithMany("Attachment")
                        .HasForeignKey("MuslimeID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Moia.Shared.Models.BranchNegoiationUsers", b =>
                {
                    b.HasOne("Moia.Shared.Models.MinistryBransh", "Bransh")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Moia.Shared.Models.MainUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bransh");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Moia.Shared.Models.Committee", b =>
                {
                    b.HasOne("Moia.Shared.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Moia.Shared.Models.Department", b =>
                {
                    b.HasOne("Moia.Shared.Models.MinistryBransh", "MinistryBransh")
                        .WithOne("Department")
                        .HasForeignKey("Moia.Shared.Models.Department", "BranshID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MinistryBransh");
                });

            modelBuilder.Entity("Moia.Shared.Models.DepartmentNegoiationUsers", b =>
                {
                    b.HasOne("Moia.Shared.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.MainUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Moia.Shared.Models.MainUser", b =>
                {
                    b.HasOne("Moia.Shared.Models.Attachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.MinistryBransh", "Bransh")
                        .WithMany("Users")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Attachment");

                    b.Navigation("Bransh");
                });

            modelBuilder.Entity("Moia.Shared.Models.MainUserRole", b =>
                {
                    b.HasOne("Moia.Shared.Models.MinistryBransh", "Bransh")
                        .WithMany()
                        .HasForeignKey("BranshId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.Committee", "Committee")
                        .WithMany("Users")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.Department", "Department")
                        .WithOne("MangerRole")
                        .HasForeignKey("Moia.Shared.Models.MainUserRole", "DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.MainRole", "Role")
                        .WithMany("MainUserRole")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.MainUser", "User")
                        .WithMany("MainUserRole")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Bransh");

                    b.Navigation("Committee");

                    b.Navigation("Department");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Moia.Shared.Models.MinistryBransh", b =>
                {
                    b.HasOne("Moia.Shared.Models.MainUserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Moia.Shared.Models.Muslime", b =>
                {
                    b.HasOne("Moia.Shared.Models.ContactData", "ContactData")
                        .WithMany()
                        .HasForeignKey("ContactDataID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.CurrentResidence", "CurrentResidence")
                        .WithMany()
                        .HasForeignKey("CurrentResidenceID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.FamilyInformation", "FamilyInformation")
                        .WithMany()
                        .HasForeignKey("FamilyInformationID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.OriginalCountry", "OriginalCountry")
                        .WithMany()
                        .HasForeignKey("OriginalCountryID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.PersonalData", "PersonalData")
                        .WithMany()
                        .HasForeignKey("PersonalDataID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.PersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.Work", "Work")
                        .WithMany()
                        .HasForeignKey("WorkID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ContactData");

                    b.Navigation("CurrentResidence");

                    b.Navigation("FamilyInformation");

                    b.Navigation("OriginalCountry");

                    b.Navigation("PersonalData");

                    b.Navigation("PersonalInformation");

                    b.Navigation("Work");
                });

            modelBuilder.Entity("Moia.Shared.Models.Order", b =>
                {
                    b.HasOne("Moia.Shared.Models.Committee", "Committee")
                        .WithMany("Orders")
                        .HasForeignKey("CommitteeID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.MainUser", "DataEntry")
                        .WithMany("Orders")
                        .HasForeignKey("DataEntryID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.Muslime", "Muslime")
                        .WithMany()
                        .HasForeignKey("MuslimeID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Committee");

                    b.Navigation("DataEntry");

                    b.Navigation("Muslime");
                });

            modelBuilder.Entity("Moia.Shared.Models.OrderHistory", b =>
                {
                    b.HasOne("Moia.Shared.Models.Order", "Order")
                        .WithMany("OrderHistories")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Moia.Shared.Models.OriginalCountry", b =>
                {
                    b.HasOne("Moia.Shared.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Moia.Shared.Models.PersonalData", b =>
                {
                    b.HasOne("Moia.Shared.Models.Preacher", "PreacherName")
                        .WithMany()
                        .HasForeignKey("PreacherNameID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PreacherName");
                });

            modelBuilder.Entity("Moia.Shared.Models.PersonalInformation", b =>
                {
                    b.HasOne("Moia.Shared.ViewModels.DTOs.EducationalLevel", "EducationalLevel")
                        .WithMany()
                        .HasForeignKey("EducationalLevelID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.Country", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.Religion", "PreviousReligion")
                        .WithMany()
                        .HasForeignKey("PreviousReligionID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Moia.Shared.Models.ResidenceIssuePlace", "ResidenceIssuePlace")
                        .WithMany()
                        .HasForeignKey("ResidenceIssuePlaceID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("EducationalLevel");

                    b.Navigation("Nationality");

                    b.Navigation("PreviousReligion");

                    b.Navigation("ResidenceIssuePlace");
                });

            modelBuilder.Entity("Moia.Shared.Models.UserToken", b =>
                {
                    b.HasOne("Moia.Shared.Models.MainUser", "User")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersonalDataWitness", b =>
                {
                    b.HasOne("Moia.Shared.Models.PersonalData", null)
                        .WithMany()
                        .HasForeignKey("PersonalDatasID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Moia.Shared.Models.Witness", null)
                        .WithMany()
                        .HasForeignKey("WitnessID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Moia.Shared.Models.Committee", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Moia.Shared.Models.Department", b =>
                {
                    b.Navigation("MangerRole");
                });

            modelBuilder.Entity("Moia.Shared.Models.MainRole", b =>
                {
                    b.Navigation("MainUserRole");
                });

            modelBuilder.Entity("Moia.Shared.Models.MainUser", b =>
                {
                    b.Navigation("MainUserRole");

                    b.Navigation("Orders");

                    b.Navigation("UserTokens");
                });

            modelBuilder.Entity("Moia.Shared.Models.MinistryBransh", b =>
                {
                    b.Navigation("Department");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Moia.Shared.Models.Muslime", b =>
                {
                    b.Navigation("Attachment");
                });

            modelBuilder.Entity("Moia.Shared.Models.Order", b =>
                {
                    b.Navigation("OrderHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
